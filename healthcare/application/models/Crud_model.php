<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');class Crud_model extends CI_Model {    function __construct() {        parent::__construct();    }    function clear_cache() {        $this->output->set_header('Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0');        $this->output->set_header('Pragma: no-cache');    }    function get_type_name_by_id($type, $type_id = '', $field = 'name') {        $this->db->where($type . '_id', $type_id);        $query = $this->db->get($type);        $result = $query->result_array();        foreach ($result as $row)            return $row[$field];        //return	$this->db->get_where($type,array($type.'_id'=>$type_id))->row()->$field;	    }    // Create a new invoice.           //    function select_invoice_info_by_doctor_id()//    {//        $patient_id = $this->session->userdata('login_user_id');//        return $this->db->get_where('invoice', array('patient_id' => $patient_id))->result_array();//    }/*********disease**********/function save_disease_info()     {        $data['name']         = $this->input->post('name');                $this->db->insert('disease', $data);    }     function update_disease_info($disease_id)    {        $data['name']        = $this->input->post('name');        $this->db->where('disease_id', $disease_id);        $this->db->update('disease', $data);    }    function delete_disease_info($disease_id)    {        $this->db->where('disease_id', $disease_id);        $this->db->delete('disease');    }     function select_disease_info()    {        return $this->db->get('disease')->result_array();    }    /*********speciality**********/function save_speciality_info()     {        $data['name']         = $this->input->post('name');                $this->db->insert('speciality', $data);    }     function update_speciality_info($speciality_id)    {        $data['name']        = $this->input->post('name');        $this->db->where('speciality_id', $speciality_id);        $this->db->update('speciality', $data);    }    function delete_speciality_info($speciality_id)    {        $this->db->where('speciality_id', $speciality_id);        $this->db->delete('speciality');    }     function select_speciality_info()    {        return $this->db->get('speciality')->result_array();    }			/*********state**********/function save_state_info()     {        $data['name']         = $this->input->post('name');                $this->db->insert('state', $data);    }     function update_state_info($state_id)    {        $data['name']        = $this->input->post('name');        $this->db->where('state_id', $state_id);        $this->db->update('state', $data);    }    function delete_state_info($state_id)    {        $this->db->where('state_id', $state_id);        $this->db->delete('state');    }     function select_state_info()    {        return $this->db->get('state')->result_array();    }				/*********city**********/function save_city_info()     {		$data['state_id']         = $this->input->post('state_id');		        $data['name']         = $this->input->post('name');                $this->db->insert('city', $data);    }     function update_city_info($city_id)    {		$data['state_id']         = $this->input->post('state_id');		        $data['name']        = $this->input->post('name');        $this->db->where('city_id', $city_id);        $this->db->update('city', $data);    }    function delete_city_info($city_id)    {        $this->db->where('city_id', $city_id);        $this->db->delete('city');    }     function select_city_info()    {        return $this->db->get('city')->result_array();    }			/*********didease data***********/	public function get_disease_data()        {  				$result= array(['Disease', 'Age','Patient']);				//$city_id= $this->input->post('city_id');				//$this->db->where('city_id',$city_id);		$this->db->group_by('disease_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$disease = $row['disease_id'];					 $name = $this->db->get_where('disease' , array('disease_id' => $disease ))->row()->name;					$age = $row['age'];					$this->db->where('disease_id',$disease );					$this->db->group_by('age');					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name,$age,$patient_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;		 		                } 	  	  public function get_city_disease_data($city_id)        {  				$result= array(['Disease', 'Patient']);			$this->db->where('city_id',$city_id);		$this->db->group_by('disease_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$disease = $row['disease_id'];					 $name = $this->db->get_where('disease' , array('disease_id' => $disease ))->row()->name;					$this->db->where('city_id',$city_id);					$this->db->where('disease_id',$disease );					$this->db->group_by('age');					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name, $patient_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	  	   public function get_disease_age_data($disease_id)        {  				$result= array(['Disease', 'Patient']);			$this->db->where('disease_id',$disease_id);		$this->db->group_by('city_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$city_id = $row['city_id'];					 $name = $this->db->get_where('city' , array('city_id' => $city_id ))->row()->name;										$this->db->where('city_id',$city_id );					$this->db->where('disease_id',$disease_id);					$this->db->group_by('age');					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name, $patient_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	  	  	   public function get_disease_city_age_data($city_id,$disease_id)        {  				$result= array(['Disease', 'Patient']);			$this->db->where('city_id',$city_id);		$this->db->where('disease_id',$disease_id);		$this->db->group_by('disease_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$city_id = $row['city_id'];					 $name = $this->db->get_where('city' , array('city_id' => $city_id ))->row()->name;					$this->db->where('disease_id',$disease_id);					$this->db->where('city_id',$city_id );					$this->db->group_by('age');					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name, $patient_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  		/*********patient data***********/		 public function get_patient_data()        {  				$result= array(['Disease', 'Patients']);				//$city_id= $this->input->post('city_id');				//$this->db->where('city_id',$city_id);		$this->db->group_by('disease_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$disease = $row['disease_id'];					 $name = $this->db->get_where('disease' , array('disease_id' => $disease ))->row()->name;										$this->db->where('disease_id',$disease );					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name, $patient_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;		 		                } 	  	  public function get_city_patient_data($city_id)        {  				$result= array(['Disease', 'Patient']);			$this->db->where('city_id',$city_id);		$this->db->group_by('disease_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$disease = $row['disease_id'];					 $name = $this->db->get_where('disease' , array('disease_id' => $disease ))->row()->name;					$this->db->where('city_id',$city_id);					$this->db->where('disease_id',$disease );					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name, $patient_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	  	   public function get_disease_patient_data($disease_id)        {  				$result= array(['Disease', 'Patient']);			$this->db->where('disease_id',$disease_id);		$this->db->group_by('city_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$city_id = $row['city_id'];					 $name = $this->db->get_where('city' , array('city_id' => $city_id ))->row()->name;										$this->db->where('city_id',$city_id );					$this->db->where('disease_id',$disease_id);					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name, $patient_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	  	  	   public function get_disease_city_patient_data($city_id,$disease_id)        {  				$result= array(['Disease', 'Patient']);			$this->db->where('city_id',$city_id);		$this->db->where('disease_id',$disease_id);		$this->db->group_by('disease_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$city_id = $row['city_id'];					 $name = $this->db->get_where('city' , array('city_id' => $city_id ))->row()->name;					$this->db->where('disease_id',$disease_id);					$this->db->where('city_id',$city_id );					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name, $patient_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	  /****************genderwise disease**********/	  public function get_disease_agewise_data($age_group)        {  				$result= array(['Disease', 'Age']);			$this->db->where('age_category_id',$age_group);		$this->db->group_by('disease_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$disease_id = $row['disease_id'];					$age_category_id = $row['age_category_id'];					 $name = $this->db->get_where('disease' , array('disease_id' => $disease_id ))->row()->name;					//$this->db->where('disease_id',$disease_id);					$this->db->where('age_category_id',$age_category_id);					$this->db->where('disease_id',$disease_id);					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name, $patient_count);										array_push($result,$new_entry);				}								 $result   = json_encode($result);		 return $result;                }  	  	  /*********gender wise***************/	  	   /****************genderwise disease**********/	  public function get_disease_genderwise_data($gender)        {  				$result= array(['Disease', 'Gender']);			$this->db->where('gender',$gender);		$this->db->group_by('disease_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$disease_id = $row['disease_id'];					$gender = $row['gender'];					 $name = $this->db->get_where('disease' , array('disease_id' => $disease_id ))->row()->name;					//$this->db->where('disease_id',$disease_id);					$this->db->where('gender',$gender);					$this->db->where('disease_id',$disease_id);					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name, $patient_count);										array_push($result,$new_entry);				}								 $result   = json_encode($result);		 return $result;                }  	  	  	  /******gender age wise***************/	  	   /****************genderwise disease**********/	  public function get_disease_gender_age_wise_data($age_group,$gender)        {  				$result= array(['Disease', 'Gender']);		$this->db->where('age_category_id',$age_group);		$this->db->where('gender',$gender);		$this->db->group_by('disease_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$disease_id = $row['disease_id'];					$gender = $row['gender'];					$age_category_id = $row['age_category_id'];					 $name = $this->db->get_where('disease' , array('disease_id' => $disease_id ))->row()->name;					//$this->db->where('disease_id',$disease_id);					$this->db->where('gender',$gender);					$this->db->where('age_category_id',$age_category_id);					$this->db->where('disease_id',$disease_id);					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name, $patient_count);										array_push($result,$new_entry);				}								 $result   = json_encode($result);		 return $result;                }  	  	  	/******graph********/	 public function get_doctors_data()        {  				$result= array(['Speciality', 'Doctors']);				//$city_id= $this->input->post('city_id');				//$this->db->where('city_id',$city_id);		$this->db->group_by('speciality_id');		$doctor_info = $this->db->get('doctor')->result_array(); 				foreach ($doctor_info as $row) { 					$speciality = $row['speciality_id'];					 $name = $this->db->get_where('speciality' , array('speciality_id' => $speciality ))->row()->name;										$this->db->where('speciality_id',$speciality );					$doctor_count = $this->db->count_all_results('doctor');										$new_entry   = array($name, $doctor_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;		 		                }  	  	   public function get_city_doctors_data($city_id)        {  				$result= array(['Speciality', 'Doctors']);			$this->db->where('city_id',$city_id);		$this->db->group_by('speciality_id');		$doctor_info = $this->db->get('doctor')->result_array(); 				foreach ($doctor_info as $row) { 					$speciality = $row['speciality_id'];					 $name = $this->db->get_where('speciality' , array('speciality_id' => $speciality ))->row()->name;					$this->db->where('city_id',$city_id);					$this->db->where('speciality_id',$speciality );					$doctor_count = $this->db->count_all_results('doctor');										$new_entry   = array($name, $doctor_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	   public function get_speciality_doctors_data($speciality_id)        {  				$result= array(['Speciality', 'Doctors']);			$this->db->where('speciality_id',$speciality_id);		$this->db->group_by('city_id');		$doctor_info = $this->db->get('doctor')->result_array(); 				foreach ($doctor_info as $row) { 					$city_id = $row['city_id'];					 $name = $this->db->get_where('city' , array('city_id' => $city_id ))->row()->name;										$this->db->where('city_id',$city_id );					$this->db->where('speciality_id',$speciality_id);					$doctor_count = $this->db->count_all_results('doctor');										$new_entry   = array($name, $doctor_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	   public function get_speciality_city_doctors_data($city_id,$speciality_id)        {  				$result= array(['Speciality', 'Doctors']);			$this->db->where('city_id',$city_id);		$this->db->where('speciality_id',$speciality_id);		$this->db->group_by('speciality_id');		$doctor_info = $this->db->get('doctor')->result_array(); 				foreach ($doctor_info as $row) { 					$city_id = $row['city_id'];					 $name = $this->db->get_where('city' , array('city_id' => $city_id ))->row()->name;					$this->db->where('speciality_id',$speciality_id);					$this->db->where('city_id',$city_id );					$doctor_count = $this->db->count_all_results('doctor');										$new_entry   = array($name, $doctor_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	  	  	  /****chemist graph-*****/	  	   public function get_chemist_data()        {  				$result= array(['Speciality', 'Chemist']);				//$city_id= $this->input->post('city_id');				//$this->db->where('city_id',$city_id);		$this->db->group_by('type_id');		$chemist_info = $this->db->get('pharmacist')->result_array(); 				foreach ($chemist_info as $row) { 					$speciality = $row['type_id'];					 $name = $this->db->get_where('type' , array('type_id' => $speciality ))->row()->name;										$this->db->where('type_id',$speciality );					$chemist_info = $this->db->count_all_results('pharmacist');										$new_entry   = array($name, $chemist_info);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	  	   public function get_city_chemist_data($city_id)        {  				$result= array(['Speciality', 'Chemist']);				//$city_id= $this->input->post('city_id');				$this->db->where('city_id',$city_id);		$this->db->group_by('type_id');		$chemist_info = $this->db->get('pharmacist')->result_array(); 				foreach ($chemist_info as $row) { 					$speciality = $row['type_id'];					 $name = $this->db->get_where('type' , array('type_id' => $speciality ))->row()->name;										$this->db->where('type_id',$speciality );					$chemist_info = $this->db->count_all_results('pharmacist');										$new_entry   = array($name, $chemist_info);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	  	public function select_goals()        {           //data is retrive from this query  		 $user_id = $this->session->userdata('login_user_id');					$this->db->where('user_id',$user_id);			 $this->db->limit(1);         $result = $this->db->get('fp_user_goals'); 		        // $result['goal'] = $query->result();		return $result;      }  	  	  	      function select_invoice_info_by_patient_id()    {        $patient_id = $this->session->userdata('login_user_id');        return $this->db->get_where('invoice', array('patient_id' => $patient_id))->result_array();    }        function calculate_invoice_total_amount($invoice_number)    {        $total_amount           = 0;        $invoice                = $this->db->get_where('invoice', array('invoice_number' => $invoice_number))->result_array();        foreach ($invoice as $row)        {            $invoice_entries    = json_decode($row['invoice_entries']);            foreach ($invoice_entries as $invoice_entry)                $total_amount  += $invoice_entry->amount;            $vat_amount         = $total_amount * $row['vat_percentage'] / 100;            $grand_total        = $total_amount + $vat_amount - $row['discount_amount'];        }        return $grand_total;    }      //////system settings//////    function update_system_settings() {        $data['description'] = $this->input->post('system_name');        $this->db->where('type', 'system_name');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('system_title');        $this->db->where('type', 'system_title');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('address');        $this->db->where('type', 'address');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('phone');        $this->db->where('type', 'phone');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('paypal_email');        $this->db->where('type', 'paypal_email');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('currency');        $this->db->where('type', 'currency');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('system_email');        $this->db->where('type', 'system_email');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('buyer');        $this->db->where('type', 'buyer');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('system_name');        $this->db->where('type', 'system_name');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('purchase_code');        $this->db->where('type', 'purchase_code');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('language');        $this->db->where('type', 'language');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('text_align');        $this->db->where('type', 'text_align');        $this->db->update('settings', $data);    }          /////creates log/////    function create_log($data) {        $data['timestamp'] = strtotime(date('Y-m-d') . ' ' . date('H:i:s'));        $data['ip'] = $_SERVER["REMOTE_ADDR"];        $location = new SimpleXMLElement(file_get_contents('http://freegeoip.net/xml/' . $_SERVER["REMOTE_ADDR"]));        $data['location'] = $location->City . ' , ' . $location->CountryName;        $this->db->insert('log', $data);    }    ////////BACKUP RESTORE/////////    function create_backup($type) {        $this->load->dbutil();        $options = array(            'format' => 'txt', // gzip, zip, txt            'add_drop' => TRUE, // Whether to add DROP TABLE statements to backup file            'add_insert' => TRUE, // Whether to add INSERT data to backup file            'newline' => "\n"               // Newline character used in backup file        );        if ($type == 'all') {            $tables = array('');            $file_name = 'system_backup';        } else {            $tables = array('tables' => array($type));            $file_name = 'backup_' . $type;        }        $backup = & $this->dbutil->backup(array_merge($options, $tables));        $this->load->helper('download');        force_download($file_name . '.sql', $backup);    }    /////////RESTORE TOTAL DB/ DB TABLE FROM UPLOADED BACKUP SQL FILE//////////    function restore_backup() {        move_uploaded_file($_FILES['userfile']['tmp_name'], 'uploads/backup.sql');        $this->load->dbutil();        $prefs = array(            'filepath' => 'uploads/backup.sql',            'delete_after_upload' => TRUE,            'delimiter' => ';'        );        $restore = & $this->dbutil->restore($prefs);        unlink($prefs['filepath']);    }    /////////DELETE DATA FROM TABLES///////////////    function truncate($type) {        if ($type == 'all') {            $this->db->truncate('student');            $this->db->truncate('mark');            $this->db->truncate('teacher');            $this->db->truncate('subject');            $this->db->truncate('class');            $this->db->truncate('exam');            $this->db->truncate('grade');        } else {            $this->db->truncate($type);        }    }    ////////IMAGE URL//////////    function get_image_url($type = '', $id = '') {        if (file_exists('uploads/' . $type . '_image/' . $id . '.jpg'))            $image_url = base_url() . 'uploads/' . $type . '_image/' . $id . '.jpg';        else            $image_url = base_url() . 'uploads/user.jpg';        return $image_url;    }         function get_attach_url($type) {        if (file_exists('uploads/test_attach_image/' . $type))            $image_url = base_url() . 'uploads/test_attach_image/' .$type;        else            $image_url = base_url() . 'uploads/user.jpg';        return $image_url;    }    /**********doctor data***********/    function save_doctor_info()    {				$data['type_id'] 	= $this->input->post('type_id');				$data['speciality_id'] 	= $this->input->post('speciality_id');		        $data['name'] 		= $this->input->post('name');		        $data['phone']          = $this->input->post('phone');        $data['email'] 		= $this->input->post('email');        $data['password']       = sha1($this->input->post('password'));        $data['licence_no'] 	= $this->input->post('licence_no');				 $data['hospital_name'] 	= $this->input->post('hospital_name');		         $data['city_id'] 	= $this->input->post('city_id');          $data['address'] 	= $this->input->post('address');        $this->db->insert('doctor',$data);        $doctor_id  =   $this->db->insert_id();       // move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/doctor_image/" . $doctor_id . '.jpg');    }        function select_doctor_info()    {        return $this->db->get('doctor')->result_array();    }        function update_doctor_info($doctor_id)    {        $data['type_id'] 	= $this->input->post('type_id');				$data['speciality_id'] 	= $this->input->post('speciality_id');		        $data['name'] 		= $this->input->post('name');		        $data['phone']          = $this->input->post('phone');        $data['email'] 		= $this->input->post('email');        //$data['password']       = sha1($this->input->post('password'));        $data['licence_no'] 	= $this->input->post('licence_no');				 $data['hospital_name'] 	= $this->input->post('hospital_name');		         $data['city_id'] 	= $this->input->post('city_id');          $data['address'] 	= $this->input->post('address');                $this->db->where('doctor_id',$doctor_id);        $this->db->update('doctor',$data);                //move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/doctor_image/" . $doctor_id . '.jpg');    }	function update_doctor_self_info($doctor_id)    {		        $data['name'] 		= $this->input->post('name');		        $data['phone']          = $this->input->post('phone');        $data['email'] 		= $this->input->post('email');        $data['licence_no'] 	= $this->input->post('licence_no');				 $data['hospital_name'] 	= $this->input->post('hospital_name');		           $data['address'] 	= $this->input->post('address');                $this->db->where('doctor_id',$doctor_id);        $this->db->update('doctor',$data);                //move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/doctor_image/" . $doctor_id . '.jpg');    }        function delete_doctor_info($doctor_id)    {        $this->db->where('doctor_id',$doctor_id);        $this->db->delete('doctor');    }    /*************patient data***********/    function save_patient_info()    {				        $data['name'] 		= $this->input->post('name');        $data['phone']          = $this->input->post('phone');				$data['gender']            = $this->input->post('gender');		        $data['age']            = $this->input->post('age');				$age_id = $this->input->post('age');				$data['age_category_id'] = $this->db->get_where('age' , array('age_id' => $age_id ))->row()->age_category_id;        $data['aadhar_card'] 	= $this->input->post('aadhar_card');        $data['disease_id']            = $this->input->post('disease_id');        $data['city_id']            = $this->input->post('city_id');				$data['doctor_id'] 		= $this->input->post('doctor_id');				$data['pharmacist_id'] 		= $this->input->post('pharmacist_id');        $this->db->insert('patient',$data);        $patient_id  =   $this->db->insert_id();        //move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/patient_image/" . $patient_id . '.jpg');    }		function save_patient_bydoctor_info()    {        $data['name'] 		= $this->input->post('name');        $data['phone']          = $this->input->post('phone');				$data['gender']            = $this->input->post('gender');		        $data['age']            = $this->input->post('age');				$age_id = $this->input->post('age');				$data['age_category_id'] = $this->db->get_where('age' , array('age_id' => $age_id ))->row()->age_category_id;        $data['aadhar_card'] 	= $this->input->post('aadhar_card');        $data['disease_id']            = $this->input->post('disease_id');        $data['city_id']            = $this->input->post('city_id');		$data['doctor_id']            = $this->session->userdata('login_user_id');        $this->db->insert('patient',$data);        $patient_id  =   $this->db->insert_id();        //move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/patient_image/" . $patient_id . '.jpg');    }	function save_patient_bypharmacist_info()    {        $data['name'] 		= $this->input->post('name');        $data['phone']          = $this->input->post('phone');				$data['gender']            = $this->input->post('gender');		        $data['age']            = $this->input->post('age');				$age_id = $this->input->post('age');				$data['age_category_id'] = $this->db->get_where('age' , array('age_id' => $age_id ))->row()->age_category_id;                $data['aadhar_card'] 	= $this->input->post('aadhar_card');        $data['disease_id']            = $this->input->post('disease_id');        $data['city_id']            = $this->input->post('city_id');		$data['pharmacist_id']            = $this->session->userdata('login_user_id');        $this->db->insert('patient',$data);        $patient_id  =   $this->db->insert_id();        //move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/patient_image/" . $patient_id . '.jpg');    }        function select_patient_info()    {        return $this->db->get('patient')->result_array();    }		 function select_patient_bydoctor_info()    {		$doctor_id        = $this->session->userdata('login_user_id');				$this->db->where('doctor_id',$doctor_id);		        return $this->db->get('patient')->result_array();    }	function select_patient_bypharmacist_info()    {		$pharmacist_id        = $this->session->userdata('login_user_id');				$this->db->where('pharmacist_id',$pharmacist_id);		        return $this->db->get('patient')->result_array();    }        function select_patient_info_by_patient_id( $patient_id = '' )    {        return $this->db->get_where('patient', array('patient_id' => $patient_id))->result_array();    }                function update_patient_info($patient_id)    {         $data['name'] 		= $this->input->post('name');        $data['phone']          = $this->input->post('phone');		        $data['age']            = $this->input->post('age');        $data['aadhar_card'] 	= $this->input->post('aadhar_card');        $data['disease_id']            = $this->input->post('disease_id');        $data['city_id']            = $this->input->post('city_id');                $this->db->where('patient_id',$patient_id);        $this->db->update('patient',$data);  //      move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/patient_image/" . $patient_id . '.jpg');    }        function delete_patient_info($patient_id)    {        $this->db->where('patient_id',$patient_id);        $this->db->delete('patient');    }       /**********chemist data***********/       function save_pharmacist_info()    {        $data['type_id'] 	= $this->input->post('type_id');		        $data['name'] 		= $this->input->post('name');		        $data['phone']          = $this->input->post('phone');        $data['email'] 		= $this->input->post('email');        $data['password']       = sha1($this->input->post('password'));        $data['licence_no'] 	= $this->input->post('licence_no');				 $data['med_store_name'] 	= $this->input->post('med_store_name');		         $data['city_id'] 	= $this->input->post('city_id');          $data['address'] 	= $this->input->post('address');                $this->db->insert('pharmacist',$data);                $pharmacist_id  =   $this->db->insert_id();        //move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/pharmacist_image/" . $pharmacist_id . '.jpg');    }        function select_pharmacist_info()    {        return $this->db->get('pharmacist')->result_array();    }        function update_pharmacist_info($pharmacist_id)    {       $data['type_id'] 	= $this->input->post('type_id');		        $data['name'] 		= $this->input->post('name');		        $data['phone']          = $this->input->post('phone');        $data['email'] 		= $this->input->post('email');       // $data['password']       = sha1($this->input->post('password'));        $data['licence_no'] 	= $this->input->post('licence_no');				 $data['med_store_name'] 	= $this->input->post('med_store_name');		         $data['city_id'] 	= $this->input->post('city_id');          $data['address'] 	= $this->input->post('address');                $this->db->where('pharmacist_id',$pharmacist_id);        $this->db->update('pharmacist',$data);                //move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/pharmacist_image/" . $pharmacist_id . '.jpg');    }    function update_pharmacist_self_info($pharmacist_id)    {      $data['name'] 		= $this->input->post('name');		        $data['phone']          = $this->input->post('phone');        $data['email'] 		= $this->input->post('email');       // $data['password']       = sha1($this->input->post('password'));        $data['licence_no'] 	= $this->input->post('licence_no');				 $data['med_store_name'] 	= $this->input->post('med_store_name');		                   $data['address'] 	= $this->input->post('address');                $this->db->where('pharmacist_id',$pharmacist_id);        $this->db->update('pharmacist',$data);                //move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/pharmacist_image/" . $pharmacist_id . '.jpg');    }        function delete_pharmacist_info($pharmacist_id)    {        $this->db->where('pharmacist_id',$pharmacist_id);        $this->db->delete('pharmacist');    }       /*****operator*********/      function save_receptionist_info()    {        $data['name'] 		= $this->input->post('name');        $data['email'] 		= $this->input->post('email');        $data['password']       = sha1($this->input->post('password'));        $data['address'] 	= $this->input->post('address');        $data['phone']          = $this->input->post('phone');               $this->db->insert('receptionist',$data);               $receptionist_id  =   $this->db->insert_id();    }        function select_receptionist_info()    {        return $this->db->get('receptionist')->result_array();    }        function update_receptionist_info($receptionist_id)    {        $data['name'] 		= $this->input->post('name');        $data['email'] 		= $this->input->post('email');        $data['address'] 	= $this->input->post('address');        $data['phone']          = $this->input->post('phone');                $this->db->where('receptionist_id',$receptionist_id);        $this->db->update('receptionist',$data);           }        function delete_receptionist_info($receptionist_id)    {        $this->db->where('receptionist_id',$receptionist_id);        $this->db->delete('receptionist');    }    /*****operator list*********/ function save_operator_list_info()    {        $data['receptionist_id'] 		= $this->input->post('receptionist_id');        $data['doctor_id'] 		= $this->input->post('doctor_id');				$this->db->insert('operator_list',$data);       }     function delete_operator_list_info($operator_list_id)    {        $this->db->where('operator_list_id',$operator_list_id);        $this->db->delete('operator_list');    }    function select_operator_list_info()    {        return $this->db->get('operator_list')->result_array();    }	function select_single_operator_list_info()    {		$this->db->where('receptionist_id',$this->session->userdata('login_user_id'));        return $this->db->get('operator_list')->result_array();    }     function save_test_report_info()    {        $data['patient_id'] 		= $this->input->post('patient_id');        $data['doctor_id'] = $this->session->userdata('login_user_id');        $data['date'] 		= $this->input->post('date');              $this->db->insert('test_report',$data);				$test_report_id  =   $this->db->insert_id();                $target_file =  basename($_FILES["attachment"]["name"]);                $data1['file'] 	= "uploads/test_attach_image/".$test_report_id.$target_file;	        $this->db->where('test_report_id',$test_report_id);        $this->db->update('test_report',$data1);        move_uploaded_file($_FILES["attachment"]["tmp_name"], "uploads/test_attach_image/" .$test_report_id.$target_file);    }        function select_test_report_info()    {        return $this->db->get('test_report')->result_array();    }        function update_test_report_info($test_report_id)    {       $data['patient_id'] 		= $this->input->post('patient_id');        $data['doctor_id'] = $this->session->userdata('login_user_id');        $data['date'] 		= $this->input->post('date');        $target_file =  basename($_FILES["attachment"]["name"]);       $data['file'] 	= $test_report_id.$target_file;                $this->db->where('test_report_id',$test_report_id);        $this->db->update('test_report',$data);               move_uploaded_file($_FILES["attachment"]["tmp_name"], "uploads/test_attach_image/" .$test_report_id.$target_file);    }        function delete_test_report_info($test_report_id)    {        $this->db->where('test_report_id',$test_report_id);        $this->db->delete('test_report');    }        /******medicine data***********/        function save_medicine_info()    {        $data['name']                   = $this->input->post('name');                $this->db->insert('medicine',$data);    }        function select_medicine_info()    {        //$pharma  = $this->session->userdata('login_user_id');       // $this->db->where('pharmacist_id',$pharma);        return $this->db->get('medicine')->result_array();    }        function update_medicine_info($medicine_id)    {        $data['name']                   = $this->input->post('name');        $this->db->where('medicine_id',$medicine_id);        $this->db->update('medicine',$data);    }        function delete_medicine_info($medicine_id)    {        $this->db->where('medicine_id',$medicine_id);        $this->db->delete('medicine');    }            function select_patient_info_by_doctor($doctor_id)    {       		$this->db->where('doctor_id',$doctor_id);        return $this->db->get('patient')->result_array();    }		function select_patient_info_by_pharmacist($pharmacist_id)    {       		$this->db->where('pharmacist_id',$pharmacist_id);        return $this->db->get('patient')->result_array();    }      /******prescription data***********/    function save_newprescription_info()     {         $data['timestamp']      = $this->input->post('date_timestamp');                $data['patient_id']     = $this->input->post('patient_id');        $data['doctor_id']      = $this->session->userdata('login_user_id');                $medicine_entries            = array();        $medicine               = $this->input->post('entry_medicine');        $morning                    = $this->input->post('entry_morning');        $afternoon                    = $this->input->post('entry_afternoon');        $evening                  = $this->input->post('entry_evening');				$doses                  = $this->input->post('entry_doses');        $number_of_entries          = sizeof($medicine);                for ($i = 0; $i < $number_of_entries; $i++)        {            if ($medicine[$i] != "")            {                $new_entry          = array('medicine' => $medicine[$i], 'morning' => $morning[$i], 'afternoon' => $afternoon[$i], 'evening' => $evening[$i], 'doses' => $doses[$i]);                array_push($medicine_entries, $new_entry);            }        }        $data['medicine_entries']    = json_encode($medicine_entries);        $this->db->insert('newprescription', $data);    }		/******pres by chemist*******/	 function save_newprescript_info()     {         $data['timestamp']      = $this->input->post('date_timestamp');                $data['patient_id']     = $this->input->post('patient_id');        $data['pharmacist_id']      = $this->session->userdata('login_user_id');                $medicine_entries            = array();        $medicine               = $this->input->post('entry_medicine');        $morning                    = $this->input->post('entry_morning');        $afternoon                    = $this->input->post('entry_afternoon');        $evening                  = $this->input->post('entry_evening');				$doses                  = $this->input->post('entry_doses');        $number_of_entries          = sizeof($medicine);                for ($i = 0; $i < $number_of_entries; $i++)        {            if ($medicine[$i] != "")            {                $new_entry          = array('medicine' => $medicine[$i], 'morning' => $morning[$i], 'afternoon' => $afternoon[$i], 'evening' => $evening[$i], 'doses' => $doses[$i]);                array_push($medicine_entries, $new_entry);            }        }        $data['medicine_entries']    = json_encode($medicine_entries);        $this->db->insert('newprescription', $data);    }    function update_newprescription_info($prescription_id)    {        $data['timestamp']      = $this->input->post('date_timestamp');        $data['patient_id']     = $this->input->post('patient_id');        $data['charges']     = $this->input->post('charges');        $data['doctor_id']      = $this->session->userdata('login_user_id');	$data['blood_pressure']      = $this->input->post('blood_pressure');        $data['weight']      = $this->input->post('weight');        $data['pulse']      = $this->input->post('pulse');        $data['bsl']      = $this->input->post('bsl');				$data['doses']      = $this->input->post('doses');       $medicine_entries            = array();        $medicine               = $this->input->post('entry_medicine');        $morning                    = $this->input->post('entry_morning');        $afternoon                    = $this->input->post('entry_afternoon');        $evening                  = $this->input->post('entry_evening');        $number_of_entries          = sizeof($medicine);                for ($i = 0; $i < $number_of_entries; $i++)        {            if ($medicine[$i] != "")            {                $new_entry          = array('medicine' => $medicine[$i], 'morning' => $morning[$i], 'afternoon' => $afternoon[$i], 'evening' => $evening[$i]);                array_push($medicine_entries, $new_entry);            }        }        $data['medicine_entries']    = json_encode($medicine_entries);        $this->db->where('newpres_id', $prescription_id);        $this->db->update('newprescription', $data);    }        function delete_newprescription_info($prescription_id)    {        $this->db->where('newpres_id',$prescription_id);        $this->db->delete('newprescription');    }    function select_newprescription_info_by_doctor_id()    {        $doctor_id = $this->session->userdata('login_user_id');        return $this->db->get_where('newprescription', array('doctor_id' => $doctor_id))->result_array();    }	function select_newprescription_info_by_pharmacist_id()    {        $pharmacist_id = $this->session->userdata('login_user_id');        return $this->db->get_where('newprescription', array('pharmacist_id' => $pharmacist_id))->result_array();    }     function select_prescription_info_by_doctor($doctor_id)    {       		$this->db->where('doctor_id',$doctor_id);        return $this->db->get('newprescription')->result_array();				//return $this->db->get_where('newprescription', array('doctor_id' => $doctor))->result_array();    }	 function select_prescription_info_by_patient($patient_id)    {       		$this->db->where('patient_id',$patient_id);        return $this->db->get('newprescription')->result_array();				//return $this->db->get_where('newprescription', array('doctor_id' => $doctor))->result_array();    }	function select_prescription_by_patient_doctor($patient_id)    {		 $doctor_id = $this->session->userdata('login_user_id');		        $this->db->where('doctor_id',$doctor_id);	   		$this->db->where('patient_id',$patient_id);        return $this->db->get('newprescription')->result_array();				//return $this->db->get_where('newprescription', array('doctor_id' => $doctor))->result_array();    }	function select_attachment_by_patient($patient_id)    {		$this->db->where('patient_id',$patient_id);        return $this->db->get('test_report')->result_array();				//return $this->db->get_where('newprescription', array('doctor_id' => $doctor))->result_array();    }		function select_attachment_by_patient_doctor($patient_id)    {		 $doctor_id = $this->session->userdata('login_user_id');		        $this->db->where('doctor_id',$doctor_id);	   		$this->db->where('patient_id',$patient_id);        return $this->db->get('test_report')->result_array();				//return $this->db->get_where('newprescription', array('doctor_id' => $doctor))->result_array();    }	function select_prescription_by_patient_pharmacist($patient_id)    {		 $pharmacist_id = $this->session->userdata('login_user_id');		        $this->db->where('pharmacist_id',$pharmacist_id);	   		$this->db->where('patient_id',$patient_id);        return $this->db->get('newprescription')->result_array();				//return $this->db->get_where('newprescription', array('doctor_id' => $doctor))->result_array();    }	 function select_prescription_info()    {       		//$this->db->where('doctor_id',$doctor_id);        return $this->db->get('newprescription')->result_array();				//return $this->db->get_where('newprescription', array('doctor_id' => $doctor))->result_array();    }            function select_prescription_info_by_doctor_id()    {        $doctor_id = $this->session->userdata('login_user_id');        return $this->db->get_where('prescription', array('doctor_id' => $doctor_id))->result_array();    }          function select_prescription_info_by_patient_id()    {        $patient_id = $this->session->userdata('login_user_id');        return $this->db->get_where('prescription', array('patient_id' => $patient_id))->result_array();    }           function delete_prescription_info($prescription_id)    {        $this->db->where('prescription_id',$prescription_id);        $this->db->delete('prescription');    }         ////////load medicine//////    function GetRow($keyword) {                $this->db->order_by('medicine_id');        $this->db->like("name", $keyword);        return $this->db->get('medicine')->result_array();    }}