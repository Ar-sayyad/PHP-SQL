<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');class Crud_model extends CI_Model {    function __construct() {        parent::__construct();    }    function clear_cache() {        $this->output->set_header('Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0');        $this->output->set_header('Pragma: no-cache');    }    function get_type_name_by_id($type, $type_id = '', $field = 'name') {        $this->db->where($type . '_id', $type_id);        $query = $this->db->get($type);        $result = $query->result_array();        foreach ($result as $row)            return $row[$field];        //return	$this->db->get_where($type,array($type.'_id'=>$type_id))->row()->$field;	    }    // Create a new invoice.            function create_deposit()     {        $data['invoice_number']     = $this->input->post('invoice_number');                 $data['doctor_id']  = $this->session->userdata('login_user_id');        $data['patient_id']         = $this->input->post('patient_id');        $data['creation_timestamp'] = $this->input->post('creation_timestamp');        $data['deposit']    = $this->input->post('deposit');               $this->db->insert('invoice', $data);    }    function create_invoice()     {        $data['title']              = $this->input->post('title');        $data['invoice_number']     = $this->input->post('invoice_number');                 $data['doctor_id']  = $this->session->userdata('login_user_id');        $data['patient_id']         = $this->input->post('patient_id');        $data['creation_timestamp'] = $this->input->post('creation_timestamp');        $data['due_timestamp']      = $this->input->post('due_timestamp');        $data['vat_percentage']     = $this->input->post('vat_percentage');        $data['discount_amount']    = $this->input->post('discount_amount');        $data['status']             = $this->input->post('status');        $data['grand_total']             = $this->input->post('grand_total');        $data['paid_total']             = $this->input->post('paid_total');        $data['remain_total']             = $this->input->post('remain_total');        $invoice_entries            = array();        $descriptions               = $this->input->post('entry_description');        $qtys  	                    = $this->input->post('entry_qty');        $amts	                    = $this->input->post('entry_amt');        $amounts                    = $this->input->post('entry_amount');        $number_of_entries          = sizeof($descriptions);                for ($i = 0; $i < $number_of_entries; $i++)        {            if ($descriptions[$i] != "" && $amounts[$i] != "")            {                $new_entry          = array('description' => $descriptions[$i], 'qty' => $qtys[$i], 'amt' => $amts[$i], 'amount' => $amounts[$i]);                array_push($invoice_entries, $new_entry);            }        }        $data['invoice_entries']    = json_encode($invoice_entries);        $this->db->insert('invoice', $data);    }    function update_invoice($invoice_id)    {        $data['title']              = $this->input->post('title');        $data['invoice_number']     = $this->input->post('invoice_number');                $data['doctor_id']  = $this->session->userdata('login_user_id');        $data['patient_id']         = $this->input->post('patient_id');        $data['creation_timestamp'] = $this->input->post('creation_timestamp');        $data['due_timestamp']      = $this->input->post('due_timestamp');        $data['vat_percentage']     = $this->input->post('vat_percentage');        $data['discount_amount']    = $this->input->post('discount_amount');        $data['status']             = $this->input->post('status');        $data['grand_total']             = $this->input->post('grand_total');        $data['paid_total']             = $this->input->post('paid_total');        $data['remain_total']             = $this->input->post('remain_total');        $invoice_entries            = array();        $descriptions               = $this->input->post('entry_description');        $qtys  	                    = $this->input->post('entry_qty');        $amts	                    = $this->input->post('entry_amt');        $amounts                    = $this->input->post('entry_amount');        $number_of_entries          = sizeof($descriptions);                for ($i = 0; $i < $number_of_entries; $i++)        {            if ($descriptions[$i] != "" && $amounts[$i] != "")            {                $new_entry          = array('description' => $descriptions[$i], 'qty' => $qtys[$i], 'amt' => $amts[$i],  'amount' => $amounts[$i]);                array_push($invoice_entries, $new_entry);            }        }        $data['invoice_entries']    = json_encode($invoice_entries);        $this->db->where('invoice_id', $invoice_id);        $this->db->update('invoice', $data);    }    function delete_invoice($invoice_id)    {        $this->db->where('invoice_id', $invoice_id);        $this->db->delete('invoice');    }    function select_all_invoice_info()    {        return $this->db->get('invoice')->result_array();    }        function select_invoice_info()    {        $doctor_id = $this->session->userdata('login_user_id');        $this->db->where('doctor_id', $doctor_id);        return $this->db->get('invoice')->result_array();    }		function select_invoice_by_account_info()    {               return $this->db->get('invoice')->result_array();    }    function create_data()     {        $data['name']         = $this->input->post('name');                $this->db->insert('data', $data);    }     function update_data($data_id)    {        $data['name']        = $this->input->post('name');        $this->db->where('data_id', $data_id);        $this->db->update('data', $data);    }    function delete_data($data_id)    {        $this->db->where('data_id', $data_id);        $this->db->delete('data');    }     function select_data_info()    {        return $this->db->get('data')->result_array();    }    //    function select_invoice_info_by_doctor_id()//    {//        $patient_id = $this->session->userdata('login_user_id');//        return $this->db->get_where('invoice', array('patient_id' => $patient_id))->result_array();//    }/*********disease**********/function save_disease_info()     {        $data['name']         = $this->input->post('name');                $this->db->insert('disease', $data);    }     function update_disease_info($disease_id)    {        $data['name']        = $this->input->post('name');        $this->db->where('disease_id', $disease_id);        $this->db->update('disease', $data);    }    function delete_disease_info($disease_id)    {        $this->db->where('disease_id', $disease_id);        $this->db->delete('disease');    }     function select_disease_info()    {        return $this->db->get('disease')->result_array();    }    /*********speciality**********/function save_speciality_info()     {        $data['name']         = $this->input->post('name');                $this->db->insert('speciality', $data);    }     function update_speciality_info($speciality_id)    {        $data['name']        = $this->input->post('name');        $this->db->where('speciality_id', $speciality_id);        $this->db->update('speciality', $data);    }    function delete_speciality_info($speciality_id)    {        $this->db->where('speciality_id', $speciality_id);        $this->db->delete('speciality');    }     function select_speciality_info()    {        return $this->db->get('speciality')->result_array();    }			/*********state**********/function save_state_info()     {        $data['name']         = $this->input->post('name');                $this->db->insert('state', $data);    }     function update_state_info($state_id)    {        $data['name']        = $this->input->post('name');        $this->db->where('state_id', $state_id);        $this->db->update('state', $data);    }    function delete_state_info($state_id)    {        $this->db->where('state_id', $state_id);        $this->db->delete('state');    }     function select_state_info()    {        return $this->db->get('state')->result_array();    }				/*********city**********/function save_city_info()     {		$data['state_id']         = $this->input->post('state_id');		        $data['name']         = $this->input->post('name');                $this->db->insert('city', $data);    }     function update_city_info($city_id)    {		$data['state_id']         = $this->input->post('state_id');		        $data['name']        = $this->input->post('name');        $this->db->where('city_id', $city_id);        $this->db->update('city', $data);    }    function delete_city_info($city_id)    {        $this->db->where('city_id', $city_id);        $this->db->delete('city');    }     function select_city_info()    {        return $this->db->get('city')->result_array();    }			/*********didease data***********/	public function get_disease_data()        {  				$result= array(['Disease', 'Age','Patient']);				//$city_id= $this->input->post('city_id');				//$this->db->where('city_id',$city_id);		$this->db->group_by('disease_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$disease = $row['disease_id'];					 $name = $this->db->get_where('disease' , array('disease_id' => $disease ))->row()->name;					$age = $row['age'];					$this->db->where('disease_id',$disease );					$this->db->group_by('age');					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name,$age,$patient_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;		 		                } 	  	  public function get_city_disease_data($city_id)        {  				$result= array(['Disease', 'Patient']);			$this->db->where('city_id',$city_id);		$this->db->group_by('disease_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$disease = $row['disease_id'];					 $name = $this->db->get_where('disease' , array('disease_id' => $disease ))->row()->name;					$this->db->where('city_id',$city_id);					$this->db->where('disease_id',$disease );					$this->db->group_by('age');					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name, $patient_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	  	   public function get_disease_age_data($disease_id)        {  				$result= array(['Disease', 'Patient']);			$this->db->where('disease_id',$disease_id);		$this->db->group_by('city_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$city_id = $row['city_id'];					 $name = $this->db->get_where('city' , array('city_id' => $city_id ))->row()->name;										$this->db->where('city_id',$city_id );					$this->db->where('disease_id',$disease_id);					$this->db->group_by('age');					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name, $patient_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	  	  	   public function get_disease_city_age_data($city_id,$disease_id)        {  				$result= array(['Disease', 'Patient']);			$this->db->where('city_id',$city_id);		$this->db->where('disease_id',$disease_id);		$this->db->group_by('disease_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$city_id = $row['city_id'];					 $name = $this->db->get_where('city' , array('city_id' => $city_id ))->row()->name;					$this->db->where('disease_id',$disease_id);					$this->db->where('city_id',$city_id );					$this->db->group_by('age');					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name, $patient_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  		/*********patient data***********/		 public function get_patient_data()        {  				$result= array(['Disease', 'Patients']);				//$city_id= $this->input->post('city_id');				//$this->db->where('city_id',$city_id);		$this->db->group_by('disease_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$disease = $row['disease_id'];					 $name = $this->db->get_where('disease' , array('disease_id' => $disease ))->row()->name;										$this->db->where('disease_id',$disease );					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name, $patient_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;		 		                } 	  	  public function get_city_patient_data($city_id)        {  				$result= array(['Disease', 'Patient']);			$this->db->where('city_id',$city_id);		$this->db->group_by('disease_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$disease = $row['disease_id'];					 $name = $this->db->get_where('disease' , array('disease_id' => $disease ))->row()->name;					$this->db->where('city_id',$city_id);					$this->db->where('disease_id',$disease );					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name, $patient_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	  	   public function get_disease_patient_data($disease_id)        {  				$result= array(['Disease', 'Patient']);			$this->db->where('disease_id',$disease_id);		$this->db->group_by('city_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$city_id = $row['city_id'];					 $name = $this->db->get_where('city' , array('city_id' => $city_id ))->row()->name;										$this->db->where('city_id',$city_id );					$this->db->where('disease_id',$disease_id);					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name, $patient_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	  	  	   public function get_disease_city_patient_data($city_id,$disease_id)        {  				$result= array(['Disease', 'Patient']);			$this->db->where('city_id',$city_id);		$this->db->where('disease_id',$disease_id);		$this->db->group_by('disease_id');		$patient_info = $this->db->get('patient')->result_array(); 				foreach ($patient_info as $row) { 					$city_id = $row['city_id'];					 $name = $this->db->get_where('city' , array('city_id' => $city_id ))->row()->name;					$this->db->where('disease_id',$disease_id);					$this->db->where('city_id',$city_id );					$patient_count = $this->db->count_all_results('patient');										$new_entry   = array($name, $patient_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	  	  	/******graph********/	 public function get_doctors_data()        {  				$result= array(['Speciality', 'Doctors']);				//$city_id= $this->input->post('city_id');				//$this->db->where('city_id',$city_id);		$this->db->group_by('speciality_id');		$doctor_info = $this->db->get('doctor')->result_array(); 				foreach ($doctor_info as $row) { 					$speciality = $row['speciality_id'];					 $name = $this->db->get_where('speciality' , array('speciality_id' => $speciality ))->row()->name;										$this->db->where('speciality_id',$speciality );					$doctor_count = $this->db->count_all_results('doctor');										$new_entry   = array($name, $doctor_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;		 		                }  	  	   public function get_city_doctors_data($city_id)        {  				$result= array(['Speciality', 'Doctors']);			$this->db->where('city_id',$city_id);		$this->db->group_by('speciality_id');		$doctor_info = $this->db->get('doctor')->result_array(); 				foreach ($doctor_info as $row) { 					$speciality = $row['speciality_id'];					 $name = $this->db->get_where('speciality' , array('speciality_id' => $speciality ))->row()->name;					$this->db->where('city_id',$city_id);					$this->db->where('speciality_id',$speciality );					$doctor_count = $this->db->count_all_results('doctor');										$new_entry   = array($name, $doctor_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	   public function get_speciality_doctors_data($speciality_id)        {  				$result= array(['Speciality', 'Doctors']);			$this->db->where('speciality_id',$speciality_id);		$this->db->group_by('city_id');		$doctor_info = $this->db->get('doctor')->result_array(); 				foreach ($doctor_info as $row) { 					$city_id = $row['city_id'];					 $name = $this->db->get_where('city' , array('city_id' => $city_id ))->row()->name;										$this->db->where('city_id',$city_id );					$this->db->where('speciality_id',$speciality_id);					$doctor_count = $this->db->count_all_results('doctor');										$new_entry   = array($name, $doctor_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	   public function get_speciality_city_doctors_data($city_id,$speciality_id)        {  				$result= array(['Speciality', 'Doctors']);			$this->db->where('city_id',$city_id);		$this->db->where('speciality_id',$speciality_id);		$this->db->group_by('speciality_id');		$doctor_info = $this->db->get('doctor')->result_array(); 				foreach ($doctor_info as $row) { 					$city_id = $row['city_id'];					 $name = $this->db->get_where('city' , array('city_id' => $city_id ))->row()->name;					$this->db->where('speciality_id',$speciality_id);					$this->db->where('city_id',$city_id );					$doctor_count = $this->db->count_all_results('doctor');										$new_entry   = array($name, $doctor_count);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	  	  	  /****chemist graph-*****/	  	   public function get_chemist_data()        {  				$result= array(['Speciality', 'Chemist']);				//$city_id= $this->input->post('city_id');				//$this->db->where('city_id',$city_id);		$this->db->group_by('type_id');		$chemist_info = $this->db->get('pharmacist')->result_array(); 				foreach ($chemist_info as $row) { 					$speciality = $row['type_id'];					 $name = $this->db->get_where('type' , array('type_id' => $speciality ))->row()->name;										$this->db->where('type_id',$speciality );					$chemist_info = $this->db->count_all_results('pharmacist');										$new_entry   = array($name, $chemist_info);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	  	   public function get_city_chemist_data($city_id)        {  				$result= array(['Speciality', 'Chemist']);				//$city_id= $this->input->post('city_id');				$this->db->where('city_id',$city_id);		$this->db->group_by('type_id');		$chemist_info = $this->db->get('pharmacist')->result_array(); 				foreach ($chemist_info as $row) { 					$speciality = $row['type_id'];					 $name = $this->db->get_where('type' , array('type_id' => $speciality ))->row()->name;										$this->db->where('type_id',$speciality );					$chemist_info = $this->db->count_all_results('pharmacist');										$new_entry   = array($name, $chemist_info);										array_push($result,$new_entry);				}                 			 $result   = json_encode($result);		 return $result;                }  	  	public function select_goals()        {           //data is retrive from this query  		 $user_id = $this->session->userdata('login_user_id');					$this->db->where('user_id',$user_id);			 $this->db->limit(1);         $result = $this->db->get('fp_user_goals'); 		        // $result['goal'] = $query->result();		return $result;      }  	  	  	      function select_invoice_info_by_patient_id()    {        $patient_id = $this->session->userdata('login_user_id');        return $this->db->get_where('invoice', array('patient_id' => $patient_id))->result_array();    }        function calculate_invoice_total_amount($invoice_number)    {        $total_amount           = 0;        $invoice                = $this->db->get_where('invoice', array('invoice_number' => $invoice_number))->result_array();        foreach ($invoice as $row)        {            $invoice_entries    = json_decode($row['invoice_entries']);            foreach ($invoice_entries as $invoice_entry)                $total_amount  += $invoice_entry->amount;            $vat_amount         = $total_amount * $row['vat_percentage'] / 100;            $grand_total        = $total_amount + $vat_amount - $row['discount_amount'];        }        return $grand_total;    }      //////system settings//////    function update_system_settings() {        $data['description'] = $this->input->post('system_name');        $this->db->where('type', 'system_name');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('system_title');        $this->db->where('type', 'system_title');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('address');        $this->db->where('type', 'address');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('phone');        $this->db->where('type', 'phone');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('paypal_email');        $this->db->where('type', 'paypal_email');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('currency');        $this->db->where('type', 'currency');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('system_email');        $this->db->where('type', 'system_email');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('buyer');        $this->db->where('type', 'buyer');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('system_name');        $this->db->where('type', 'system_name');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('purchase_code');        $this->db->where('type', 'purchase_code');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('language');        $this->db->where('type', 'language');        $this->db->update('settings', $data);        $data['description'] = $this->input->post('text_align');        $this->db->where('type', 'text_align');        $this->db->update('settings', $data);    }        // SMS settings.    function update_sms_settings() {                $data['description'] = $this->input->post('clickatell_user');        $this->db->where('type', 'clickatell_user');        $this->db->update('settings', $data);                $data['description'] = $this->input->post('clickatell_password');        $this->db->where('type', 'clickatell_password');        $this->db->update('settings', $data);                $data['description'] = $this->input->post('clickatell_api_id');        $this->db->where('type', 'clickatell_api_id');        $this->db->update('settings', $data);    }    /////creates log/////    function create_log($data) {        $data['timestamp'] = strtotime(date('Y-m-d') . ' ' . date('H:i:s'));        $data['ip'] = $_SERVER["REMOTE_ADDR"];        $location = new SimpleXMLElement(file_get_contents('http://freegeoip.net/xml/' . $_SERVER["REMOTE_ADDR"]));        $data['location'] = $location->City . ' , ' . $location->CountryName;        $this->db->insert('log', $data);    }    ////////BACKUP RESTORE/////////    function create_backup($type) {        $this->load->dbutil();        $options = array(            'format' => 'txt', // gzip, zip, txt            'add_drop' => TRUE, // Whether to add DROP TABLE statements to backup file            'add_insert' => TRUE, // Whether to add INSERT data to backup file            'newline' => "\n"               // Newline character used in backup file        );        if ($type == 'all') {            $tables = array('');            $file_name = 'system_backup';        } else {            $tables = array('tables' => array($type));            $file_name = 'backup_' . $type;        }        $backup = & $this->dbutil->backup(array_merge($options, $tables));        $this->load->helper('download');        force_download($file_name . '.sql', $backup);    }    /////////RESTORE TOTAL DB/ DB TABLE FROM UPLOADED BACKUP SQL FILE//////////    function restore_backup() {        move_uploaded_file($_FILES['userfile']['tmp_name'], 'uploads/backup.sql');        $this->load->dbutil();        $prefs = array(            'filepath' => 'uploads/backup.sql',            'delete_after_upload' => TRUE,            'delimiter' => ';'        );        $restore = & $this->dbutil->restore($prefs);        unlink($prefs['filepath']);    }    /////////DELETE DATA FROM TABLES///////////////    function truncate($type) {        if ($type == 'all') {            $this->db->truncate('student');            $this->db->truncate('mark');            $this->db->truncate('teacher');            $this->db->truncate('subject');            $this->db->truncate('class');            $this->db->truncate('exam');            $this->db->truncate('grade');        } else {            $this->db->truncate($type);        }    }    ////////IMAGE URL//////////    function get_image_url($type = '', $id = '') {        if (file_exists('uploads/' . $type . '_image/' . $id . '.jpg'))            $image_url = base_url() . 'uploads/' . $type . '_image/' . $id . '.jpg';        else            $image_url = base_url() . 'uploads/user.jpg';        return $image_url;    }         function get_attach_url($type) {        if (file_exists('uploads/test_attach_image/' . $type))            $image_url = base_url() . 'uploads/test_attach_image/' .$type;        else            $image_url = base_url() . 'uploads/user.jpg';        return $image_url;    }        function save_department_info()    {        $data['name'] 		= $this->input->post('name');        $data['description']    = $this->input->post('description');                $this->db->insert('department',$data);    }        function select_department_info()    {        return $this->db->get('department')->result_array();    }        function update_department_info($department_id)    {        $data['name'] 		= $this->input->post('name');        $data['description'] 	= $this->input->post('description');                $this->db->where('department_id',$department_id);        $this->db->update('department',$data);    }        function delete_department_info($department_id)    {        $this->db->where('department_id',$department_id);        $this->db->delete('department');    }        function save_doctor_info()    {				$data['type_id'] 	= $this->input->post('type_id');				$data['speciality_id'] 	= $this->input->post('speciality_id');		        $data['name'] 		= $this->input->post('name');		        $data['phone']          = $this->input->post('phone');        $data['email'] 		= $this->input->post('email');        $data['password']       = sha1($this->input->post('password'));        $data['licence_no'] 	= $this->input->post('licence_no');				 $data['hospital_name'] 	= $this->input->post('hospital_name');		         $data['city_id'] 	= $this->input->post('city_id');          $data['address'] 	= $this->input->post('address');        $this->db->insert('doctor',$data);        $doctor_id  =   $this->db->insert_id();       // move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/doctor_image/" . $doctor_id . '.jpg');    }        function select_doctor_info()    {        return $this->db->get('doctor')->result_array();    }        function update_doctor_info($doctor_id)    {        $data['type_id'] 	= $this->input->post('type_id');				$data['speciality_id'] 	= $this->input->post('speciality_id');		        $data['name'] 		= $this->input->post('name');		        $data['phone']          = $this->input->post('phone');        $data['email'] 		= $this->input->post('email');        //$data['password']       = sha1($this->input->post('password'));        $data['licence_no'] 	= $this->input->post('licence_no');				 $data['hospital_name'] 	= $this->input->post('hospital_name');		         $data['city_id'] 	= $this->input->post('city_id');          $data['address'] 	= $this->input->post('address');                $this->db->where('doctor_id',$doctor_id);        $this->db->update('doctor',$data);                //move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/doctor_image/" . $doctor_id . '.jpg');    }	function update_doctor_self_info($doctor_id)    {		        $data['name'] 		= $this->input->post('name');		        $data['phone']          = $this->input->post('phone');        $data['email'] 		= $this->input->post('email');        $data['licence_no'] 	= $this->input->post('licence_no');				 $data['hospital_name'] 	= $this->input->post('hospital_name');		           $data['address'] 	= $this->input->post('address');                $this->db->where('doctor_id',$doctor_id);        $this->db->update('doctor',$data);                //move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/doctor_image/" . $doctor_id . '.jpg');    }        function delete_doctor_info($doctor_id)    {        $this->db->where('doctor_id',$doctor_id);        $this->db->delete('doctor');    }        function save_patient_info()    {				        $data['name'] 		= $this->input->post('name');        $data['phone']          = $this->input->post('phone');				$data['gender']            = $this->input->post('gender');		        $data['age']            = $this->input->post('age');        $data['aadhar_card'] 	= $this->input->post('aadhar_card');        $data['disease_id']            = $this->input->post('disease_id');        $data['city_id']            = $this->input->post('city_id');				$data['doctor_id'] 		= $this->input->post('doctor_id');				$data['pharmacist_id'] 		= $this->input->post('pharmacist_id');        $this->db->insert('patient',$data);        $patient_id  =   $this->db->insert_id();        //move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/patient_image/" . $patient_id . '.jpg');    }		function save_patient_bydoctor_info()    {        $data['name'] 		= $this->input->post('name');        $data['phone']          = $this->input->post('phone');		        $data['age']            = $this->input->post('age');        $data['aadhar_card'] 	= $this->input->post('aadhar_card');        $data['disease_id']            = $this->input->post('disease_id');        $data['city_id']            = $this->input->post('city_id');		$data['doctor_id']            = $this->session->userdata('login_user_id');        $this->db->insert('patient',$data);        $patient_id  =   $this->db->insert_id();        //move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/patient_image/" . $patient_id . '.jpg');    }	function save_patient_bypharmacist_info()    {        $data['name'] 		= $this->input->post('name');        $data['phone']          = $this->input->post('phone');		        $data['age']            = $this->input->post('age');        $data['aadhar_card'] 	= $this->input->post('aadhar_card');        $data['disease_id']            = $this->input->post('disease_id');        $data['city_id']            = $this->input->post('city_id');		$data['pharmacist_id']            = $this->session->userdata('login_user_id');        $this->db->insert('patient',$data);        $patient_id  =   $this->db->insert_id();        //move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/patient_image/" . $patient_id . '.jpg');    }        function select_patient_info()    {        return $this->db->get('patient')->result_array();    }		 function select_patient_bydoctor_info()    {		$doctor_id        = $this->session->userdata('login_user_id');				$this->db->where('doctor_id',$doctor_id);		        return $this->db->get('patient')->result_array();    }	function select_patient_bypharmacist_info()    {		$pharmacist_id        = $this->session->userdata('login_user_id');				$this->db->where('pharmacist_id',$pharmacist_id);		        return $this->db->get('patient')->result_array();    }        function select_patient_info_by_patient_id( $patient_id = '' )    {        return $this->db->get_where('patient', array('patient_id' => $patient_id))->result_array();    }                function update_patient_info($patient_id)    {         $data['name'] 		= $this->input->post('name');        $data['phone']          = $this->input->post('phone');		        $data['age']            = $this->input->post('age');        $data['aadhar_card'] 	= $this->input->post('aadhar_card');        $data['disease_id']            = $this->input->post('disease_id');        $data['city_id']            = $this->input->post('city_id');                $this->db->where('patient_id',$patient_id);        $this->db->update('patient',$data);  //      move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/patient_image/" . $patient_id . '.jpg');    }        function delete_patient_info($patient_id)    {        $this->db->where('patient_id',$patient_id);        $this->db->delete('patient');    }        function save_nurse_info()    {        $data['name'] 		= $this->input->post('name');        $data['email'] 		= $this->input->post('email');        $data['password']       = sha1($this->input->post('password'));        $data['address'] 	= $this->input->post('address');        $data['phone']          = $this->input->post('phone');                $this->db->insert('nurse',$data);                $nurse_id  =   $this->db->insert_id();        move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/nurse_image/" . $nurse_id . '.jpg');    }        function select_nurse_info()    {        return $this->db->get('nurse')->result_array();    }        function update_nurse_info($nurse_id)    {        $data['name'] 		= $this->input->post('name');        $data['email'] 		= $this->input->post('email');        $data['address'] 	= $this->input->post('address');        $data['phone']          = $this->input->post('phone');                $this->db->where('nurse_id',$nurse_id);        $this->db->update('nurse',$data);                move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/nurse_image/" . $nurse_id . '.jpg');    }        function delete_nurse_info($nurse_id)    {        $this->db->where('nurse_id',$nurse_id);        $this->db->delete('nurse');    }        function save_pharmacist_info()    {        $data['type_id'] 	= $this->input->post('type_id');		        $data['name'] 		= $this->input->post('name');		        $data['phone']          = $this->input->post('phone');        $data['email'] 		= $this->input->post('email');        $data['password']       = sha1($this->input->post('password'));        $data['licence_no'] 	= $this->input->post('licence_no');				 $data['med_store_name'] 	= $this->input->post('med_store_name');		         $data['city_id'] 	= $this->input->post('city_id');          $data['address'] 	= $this->input->post('address');                $this->db->insert('pharmacist',$data);                $pharmacist_id  =   $this->db->insert_id();        //move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/pharmacist_image/" . $pharmacist_id . '.jpg');    }        function select_pharmacist_info()    {        return $this->db->get('pharmacist')->result_array();    }        function update_pharmacist_info($pharmacist_id)    {       $data['type_id'] 	= $this->input->post('type_id');		        $data['name'] 		= $this->input->post('name');		        $data['phone']          = $this->input->post('phone');        $data['email'] 		= $this->input->post('email');       // $data['password']       = sha1($this->input->post('password'));        $data['licence_no'] 	= $this->input->post('licence_no');				 $data['med_store_name'] 	= $this->input->post('med_store_name');		         $data['city_id'] 	= $this->input->post('city_id');          $data['address'] 	= $this->input->post('address');                $this->db->where('pharmacist_id',$pharmacist_id);        $this->db->update('pharmacist',$data);                //move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/pharmacist_image/" . $pharmacist_id . '.jpg');    }    function update_pharmacist_self_info($pharmacist_id)    {      $data['name'] 		= $this->input->post('name');		        $data['phone']          = $this->input->post('phone');        $data['email'] 		= $this->input->post('email');       // $data['password']       = sha1($this->input->post('password'));        $data['licence_no'] 	= $this->input->post('licence_no');				 $data['med_store_name'] 	= $this->input->post('med_store_name');		                   $data['address'] 	= $this->input->post('address');                $this->db->where('pharmacist_id',$pharmacist_id);        $this->db->update('pharmacist',$data);                //move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/pharmacist_image/" . $pharmacist_id . '.jpg');    }        function delete_pharmacist_info($pharmacist_id)    {        $this->db->where('pharmacist_id',$pharmacist_id);        $this->db->delete('pharmacist');    }        function save_laboratorist_info()    {        $data['name'] 		= $this->input->post('name');        $data['email'] 		= $this->input->post('email');        $data['password']       = sha1($this->input->post('password'));        $data['address'] 	= $this->input->post('address');        $data['phone']          = $this->input->post('phone');                $this->db->insert('laboratorist',$data);                $laboratorist_id  =   $this->db->insert_id();        move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/laboratorist_image/" . $laboratorist_id . '.jpg');    }        function select_laboratorist_info()    {        return $this->db->get('laboratorist')->result_array();    }        function update_laboratorist_info($laboratorist_id)    {        $data['name'] 		= $this->input->post('name');        $data['email'] 		= $this->input->post('email');        $data['address'] 	= $this->input->post('address');        $data['phone']          = $this->input->post('phone');                $this->db->where('laboratorist_id',$laboratorist_id);        $this->db->update('laboratorist',$data);                move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/laboratorist_image/" . $laboratorist_id . '.jpg');    }        function delete_laboratorist_info($laboratorist_id)    {        $this->db->where('laboratorist_id',$laboratorist_id);        $this->db->delete('laboratorist');    }                 function save_test_report_info()    {        $data['patient_id'] 		= $this->input->post('patient_id');        $data['doctor_id'] = $this->session->userdata('login_user_id');        $data['date'] 		= $this->input->post('date');              $this->db->insert('test_report',$data);				$test_report_id  =   $this->db->insert_id();                $target_file =  basename($_FILES["attachment"]["name"]);                $data1['file'] 	= "uploads/test_attach_image/".$test_report_id.$target_file;	        $this->db->where('test_report_id',$test_report_id);        $this->db->update('test_report',$data1);        move_uploaded_file($_FILES["attachment"]["tmp_name"], "uploads/test_attach_image/" .$test_report_id.$target_file);    }        function select_test_report_info()    {        return $this->db->get('test_report')->result_array();    }        function update_test_report_info($test_report_id)    {       $data['patient_id'] 		= $this->input->post('patient_id');        $data['doctor_id'] = $this->session->userdata('login_user_id');        $data['date'] 		= $this->input->post('date');        $target_file =  basename($_FILES["attachment"]["name"]);       $data['file'] 	= $test_report_id.$target_file;                $this->db->where('test_report_id',$test_report_id);        $this->db->update('test_report',$data);               move_uploaded_file($_FILES["attachment"]["tmp_name"], "uploads/test_attach_image/" .$test_report_id.$target_file);    }        function delete_test_report_info($test_report_id)    {        $this->db->where('test_report_id',$test_report_id);        $this->db->delete('test_report');    }                            function save_accountant_info()    {        $data['name'] 		= $this->input->post('name');        $data['email'] 		= $this->input->post('email');        $data['password']       = sha1($this->input->post('password'));        $data['address'] 	= $this->input->post('address');        $data['phone']          = $this->input->post('phone');                $this->db->insert('accountant',$data);                $accountant_id  =   $this->db->insert_id();        move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/accountant_image/" . $accountant_id . '.jpg');    }        function select_accountant_info()    {        return $this->db->get('accountant')->result_array();    }        function update_accountant_info($accountant_id)    {        $data['name'] 		= $this->input->post('name');        $data['email'] 		= $this->input->post('email');        $data['address'] 	= $this->input->post('address');        $data['phone']          = $this->input->post('phone');                $this->db->where('accountant_id',$accountant_id);        $this->db->update('accountant',$data);                move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/accountant_image/" . $accountant_id . '.jpg');    }        function delete_accountant_info($accountant_id)    {        $this->db->where('accountant_id',$accountant_id);        $this->db->delete('accountant');    }        function save_receptionist_info()    {        $data['name'] 		= $this->input->post('name');        $data['email'] 		= $this->input->post('email');        $data['password']       = sha1($this->input->post('password'));        $data['address'] 	= $this->input->post('address');        $data['phone']          = $this->input->post('phone');                $this->db->insert('receptionist',$data);                $receptionist_id  =   $this->db->insert_id();        move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/receptionist_image/" . $receptionist_id . '.jpg');    }        function select_receptionist_info()    {        return $this->db->get('receptionist')->result_array();    }        function update_receptionist_info($receptionist_id)    {        $data['name'] 		= $this->input->post('name');        $data['email'] 		= $this->input->post('email');        $data['address'] 	= $this->input->post('address');        $data['phone']          = $this->input->post('phone');                $this->db->where('receptionist_id',$receptionist_id);        $this->db->update('receptionist',$data);                move_uploaded_file($_FILES["image"]["tmp_name"], "uploads/receptionist_image/" . $receptionist_id . '.jpg');    }        function delete_receptionist_info($receptionist_id)    {        $this->db->where('receptionist_id',$receptionist_id);        $this->db->delete('receptionist');    }        function save_bed_allotment_info()    {        $data['bed_id']                     = $this->input->post('bed_id');        $data['patient_id'] 		    = $this->input->post('patient_id');                $data['doctor_id']                  = $this->session->userdata('login_user_id');                $data['refered_by'] 	    = 		$this->input->post('refered_by');                $data['provisional_diagnosis'] 	    = $this->input->post('provisional_diagnosis');                $data['final_diagnosis'] 	    = $this->input->post('final_diagnosis');        $data['allotment_timestamp']        = $this->input->post('allotment_timestamp');        $data['relative']                   = $this->input->post('relative');                $data['relation_with_patient']      = $this->input->post('relation_with_patient');                $data['relative_phone']        = $this->input->post('relative_phone');                       $this->db->insert('bed_allotment',$data);    }       function save_treatment_sheet_info()     {        $data['bed_allotment_id']     = $this->input->post('bed_allotment_id');                $data['patient_id']        = $this->input->post('patient_id');                $data['doctor_id']       = $this->session->userdata('login_user_id');                $data['date_given']       = $this->input->post('date_given');        $treatment_entry           = array();        $medicine               = $this->input->post('entry_medicine');        $route                   = $this->input->post('route');        $time_one                    = $this->input->post('time_one');        $time_two                  = $this->input->post('time_two');                $time_three                  = $this->input->post('time_three');                $time_four                  = $this->input->post('time_four');                $number_of_entries          = sizeof($medicine);                for ($i = 0; $i < $number_of_entries; $i++)        {            if ($medicine[$i] != "")            {                $new_entry          = array('medicine' => $medicine[$i], 'route' => $route[$i], 'time_one' => $time_one[$i], 'time_two' => $time_two[$i], 'time_three' => $time_three[$i], 'time_four' => $time_four[$i]);                array_push($treatment_entry, $new_entry);            }        }        $data['treatment_entry']    = json_encode($treatment_entry);        $this->db->insert('treatment_sheet', $data);    }    function select_bed_allotment_info()    {        return $this->db->get_where('bed_allotment',array('discharge_status'=>0))->result_array();    }    function select_treatment_sheet_info()    {            $doctor_id = $this->session->userdata('login_user_id');            $this->db->where('doctor_id',$doctor_id);        return $this->db->get('treatment_sheet')->result_array();    }    function select_discharge_info()    {            $doctor_id = $this->session->userdata('login_user_id');            $this->db->where('doctor_id',$doctor_id);        return $this->db->get_where('bed_allotment',array('discharge_status'=>1))->result_array();    }        function update_bed_allotment_info($bed_allotment_id)    {        $data['bed_id']                 = $this->input->post('bed_id');        $data['patient_id'] 		= $this->input->post('patient_id');                $data['doctor_id']                  = $this->session->userdata('login_user_id');        $data['refered_by'] 	    = $this->input->post('referred_by');                $data['provisional_diagnosis'] 	    = $this->input->post('provisional_diagnosis');                $data['final_diagnosis'] 	    = $this->input->post('final_diagnosis');        $data['allotment_timestamp']        = $this->input->post('allotment_timestamp');        $data['relative']                   = $this->input->post('relative');                $data['relation_with_patient']      = $this->input->post('relation_with_patient');                $data['relative_phone']        = $this->input->post('relative_phone');                $this->db->where('bed_allotment_id',$bed_allotment_id);        $this->db->update('bed_allotment',$data);    }    function discharge_bed_allotment_info($bed_allotment_id)    {        $data['bed_id']                 = $this->input->post('bed_id');        $data['patient_id'] 		= $this->input->post('patient_id');        $data['doctor_id'] = $this->session->userdata('login_user_id');        $data['allotment_timestamp'] 	= $this->input->post('allotment_timestamp');        $data['discharge_timestamp']    = $this->input->post('discharge_timestamp');        $data['consultancy'] 		= $this->input->post('consultancy');        $data['surgery_date'] 		= $this->input->post('surgery_date');        $data['drug_allergies'] 		= $this->input->post('drug_allergies');        $data['final_dignosis'] 		= $this->input->post('final_dignosis');        $data['chief_complaints'] 	= $this->input->post('chief_complaints');        $data['temperature'] 		= $this->input->post('temperature');        $data['pulse'] 		 	= $this->input->post('pulse');        $data['blood_pressure'] 		= $this->input->post('blood_pressure');        $data['clinical_exam'] 		= $this->input->post('clinical_exam');        $data['investigation_detail'] 	= $this->input->post('investigation_detail');        $data['consultation_ref'] 	= $this->input->post('consultation_ref');        $data['treatment_given'] 	= $this->input->post('treatment_given');        $data['condition_of_discharge'] = $this->input->post('condition_of_discharge');        $data['advice'] 		= $this->input->post('advice');        $data['mediation'] 		= $this->input->post('mediation');        $data['discharge_status'] =1;        $this->db->where('bed_allotment_id',$bed_allotment_id);        $this->db->update('bed_allotment',$data);    }        function delete_bed_allotment_info($bed_allotment_id)    {        $this->db->where('bed_allotment_id',$bed_allotment_id);        $this->db->delete('bed_allotment');    }        function select_blood_bank_info()    {        return $this->db->get('blood_bank')->result_array();    }        function update_blood_bank_info($blood_group_id)    {        $data['status']    = $this->input->post('status');                $this->db->where('blood_group_id',$blood_group_id);        $this->db->update('blood_bank',$data);    }        function save_report_info()    {        $data['type'] 		= $this->input->post('type');        $data['description']    = $this->input->post('description');        $data['timestamp']      = strtotime($this->input->post('timestamp'));        $data['patient_id']     = $this->input->post('patient_id');                $login_type             = $this->session->userdata('login_type');        if($login_type=='nurse')            $data['doctor_id']  = $this->input->post('doctor_id');        else $data['doctor_id'] = $this->session->userdata('login_user_id');                $this->db->insert('report',$data);    }        function select_report_info()    {        return $this->db->get('report')->result_array();    }        function update_report_info($report_id)    {        $data['type'] 		= $this->input->post('type');        $data['description']    = $this->input->post('description');        $data['timestamp']      = strtotime($this->input->post('timestamp'));        $data['patient_id']     = $this->input->post('patient_id');                $login_type             = $this->session->userdata('login_type');        if($login_type=='nurse')            $data['doctor_id']  = $this->input->post('doctor_id');        else $data['doctor_id'] = $this->session->userdata('login_user_id');                $this->db->where('report_id',$report_id);        $this->db->update('report',$data);    }        function delete_report_info($report_id)    {        $this->db->where('report_id',$report_id);        $this->db->delete('report');    }        function save_bed_info()    {        $data['bed_number']     = $this->input->post('bed_number');        $data['type'] 		= $this->input->post('type');        $data['description']    = $this->input->post('description');                $this->db->insert('bed',$data);    }        function select_bed_info()    {        return $this->db->get('bed')->result_array();    }        function save_bed_category_info()    {        $data['name']     = $this->input->post('name');        $this->db->insert('bed_category',$data);    }     function select_bed_category_info()    {        return $this->db->get('bed_category')->result_array();    }    function update_bed_category_info($bed_category_id)    {        $data['name'] 		= $this->input->post('name');        $this->db->where('bed_category_id',$bed_category_id);        $this->db->update('bed_category',$data);    }    function delete_bed_category_info($bed_category_id)    {        $this->db->where('bed_category_id',$bed_category_id);        $this->db->delete('bed_category');    }    function update_bed_info($bed_id)    {        $data['bed_number']     = $this->input->post('bed_number');        $data['type'] 		= $this->input->post('type');        $data['description']    = $this->input->post('description');                $this->db->where('bed_id',$bed_id);        $this->db->update('bed',$data);    }        function delete_bed_info($bed_id)    {        $this->db->where('bed_id',$bed_id);        $this->db->delete('bed');    }        function save_blood_donor_info()    {        $data['name']                       = $this->input->post('name');        $data['email']                      = $this->input->post('email');        $data['address']                    = $this->input->post('address');        $data['phone']                      = $this->input->post('phone');        $data['sex']                        = $this->input->post('sex');        $data['age']                        = $this->input->post('age');        $data['blood_group']                = $this->input->post('blood_group');        $data['last_donation_timestamp']    = strtotime($this->input->post('last_donation_timestamp'));                $this->db->insert('blood_donor',$data);    }        function select_blood_donor_info()    {        return $this->db->get('blood_donor')->result_array();    }        function update_blood_donor_info($blood_donor_id)    {        $data['name']                       = $this->input->post('name');        $data['email']                      = $this->input->post('email');        $data['address']                    = $this->input->post('address');        $data['phone']                      = $this->input->post('phone');        $data['sex']                        = $this->input->post('sex');        $data['age']                        = $this->input->post('age');        $data['blood_group']                = $this->input->post('blood_group');        $data['last_donation_timestamp']    = strtotime($this->input->post('last_donation_timestamp'));                $this->db->where('blood_donor_id',$blood_donor_id);        $this->db->update('blood_donor',$data);    }        function delete_blood_donor_info($blood_donor_id)    {        $this->db->where('blood_donor_id',$blood_donor_id);        $this->db->delete('blood_donor');    }        function save_medicine_category_info()    {        $data['name'] 		= $this->input->post('name');        $data['description']    = $this->input->post('description');                $this->db->insert('medicine_category',$data);    }        function select_medicine_category_info()    {        return $this->db->get('medicine_category')->result_array();    }        function update_medicine_category_info($medicine_category_id)    {        $data['name'] 		= $this->input->post('name');        $data['description'] 	= $this->input->post('description');                $this->db->where('medicine_category_id',$medicine_category_id);        $this->db->update('medicine_category',$data);    }        function delete_medicine_category_info($medicine_category_id)    {        $this->db->where('medicine_category_id',$medicine_category_id);        $this->db->delete('medicine_category');    }        function save_medicine_info()    {        $data['name']                   = $this->input->post('name');                $this->db->insert('medicine',$data);    }        function select_medicine_info()    {        //$pharma  = $this->session->userdata('login_user_id');       // $this->db->where('pharmacist_id',$pharma);        return $this->db->get('medicine')->result_array();    }        function update_medicine_info($medicine_id)    {        $data['name']                   = $this->input->post('name');        $this->db->where('medicine_id',$medicine_id);        $this->db->update('medicine',$data);    }        function delete_medicine_info($medicine_id)    {        $this->db->where('medicine_id',$medicine_id);        $this->db->delete('medicine');    }        function save_selling_info()    {        $data['patient_id']    = $this->input->post('patient_id');        $data['pharmacist_id'] = $this->session->userdata('login_user_id');        $data['grand_total']    = $this->input->post('grand_total');        $data['date']           = $this->input->post('date');        $medicine_entries            = array();        $medicine               = $this->input->post('medicine');        $uprice                   = $this->input->post('uprice');        $stk                    = $this->input->post('stk');        $qty                    = $this->input->post('qty');        $total                  = $this->input->post('total');                $number_of_entries          = sizeof($medicine);                for ($i = 0; $i < $number_of_entries; $i++)        {            if ($medicine[$i] != "")            {                $lastqty= ($stk[$i]-$qty[$i]);                $data1['quantity']= $lastqty;                $this->db->where('medicine_id',$medicine[$i]);                $this->db->update('medicine',$data1);                        $new_entry          = array('medicine' => $medicine[$i], 'price' => $uprice[$i], 'quantity' => $qty[$i], 'total' => $total[$i]);                array_push($medicine_entries, $new_entry);            }        }        $data['medicine_entries']    = json_encode($medicine_entries);        $this->db->insert('selling', $data);                   }        function select_selling_info()    {        $pharma  = $this->session->userdata('login_user_id');        $this->db->where('pharmacist_id',$pharma);        return $this->db->get('selling')->result_array();    }    function select_allselling_info()    {        //$pharma  = $this->session->userdata('login_user_id');       // $this->db->where('pharmacist_id',$pharma);        return $this->db->get('selling')->result_array();    }    function save_appointment_info()    {        $data['timestamp']  = $this->input->post('date_timestamp');        $data['status']     = 'approved';        $data['patient_id'] = $this->input->post('patient_id');                if($this->session->userdata('login_type') == 'doctor')            $data['doctor_id']  = $this->session->userdata('login_user_id');        else            $data['doctor_id']  = $this->input->post('doctor_id');                $this->db->insert('appointment',$data);                // Notify patient with sms.        $notify = $this->input->post('notify');        if($notify != '') {            $patient_name   =   $this->db->get_where('patient',                                array('patient_id' => $data['patient_id']))->row()->name;            $doctor_name    =   $this->db->get_where('doctor',                                array('doctor_id' => $data['doctor_id']))->row()->name;            $date           =   date('l, d F Y', $data['timestamp']);            $time           =   date('g:i a', $data['timestamp']);            $message        =   $patient_name . ', you have an appointment with doctor ' . $doctor_name . ' on ' . $date . ' at ' . $time . '.';            $receiver_phone =   $this->db->get_where('patient',                                array('patient_id' => $data['patient_id']))->row()->phone;                        $this->sms_model->send_sms($message, $receiver_phone);        }    }        function save_requested_appointment_info()    {        $data['timestamp']  = $this->input->post('date_timestamp');        $data['doctor_id']  = $this->input->post('doctor_id');        $data['patient_id'] = $this->session->userdata('login_user_id');        $data['status']     = 'pending';                $this->db->insert('appointment',$data);    }        function select_appointment_info_by_doctor_id()    {        $doctor_id = $this->session->userdata('login_user_id');                $this->db->order_by('timestamp' , 'desc');        $this->db->where('doctor_id' , $doctor_id);        $this->db->where('status' , 'approved');        $this->db->where('completed_status' , 0);        return $this->db->get('appointment')->result_array();    }        function select_appointment_info_by_patient_id()    {        $patient_id = $this->session->userdata('login_user_id');        return $this->db->get_where('appointment', array('patient_id' => $patient_id, 'status' => 'approved'))->result_array();    }        function select_appointment_info()    {        return $this->db->get_where('appointment', array('status' => 'approved'))->result_array();               }        function select_pending_appointment_info_by_patient_id()    {        $patient_id = $this->session->userdata('login_user_id');        return $this->db->get_where('appointment', array('patient_id' => $patient_id, 'status' => 'pending'))->result_array();    }        function select_requested_appointment_info_by_doctor_id()    {        $doctor_id = $this->session->userdata('login_user_id');        return $this->db->get_where('appointment', array('doctor_id' => $doctor_id, 'status' => 'pending'))->result_array();    }        function select_requested_appointment_info()    {        $this->db->order_by('doctor_id', 'asc');        return $this->db->get_where('appointment', array('status' => 'pending'))->result_array();    }        function select_patient_info_by_doctor($doctor_id)    {       		$this->db->where('doctor_id',$doctor_id);        return $this->db->get('patient')->result_array();    }		function select_patient_info_by_pharmacist($pharmacist_id)    {       		$this->db->where('pharmacist_id',$pharmacist_id);        return $this->db->get('patient')->result_array();    }        function select_appointments_between_loggedin_patient_and_doctor()    {        $patient_id = $this->session->userdata('login_user_id');                $this->db->group_by('doctor_id');        return $this->db->get_where('appointment', array('patient_id' => $patient_id, 'status' => 'approved','completed_status'=>0))->result_array();    }        function update_appointment_info($appointment_id)    {        $data['timestamp']  = strtotime($this->input->post('date_timestamp') );        $data['patient_id'] = $this->input->post('patient_id');                $this->db->where('appointment_id',$appointment_id);        $this->db->update('appointment',$data);                // Notify patient with sms.        $notify = $this->input->post('notify');        if($notify != '') {            $doctor_id      =   $this->session->userdata('login_user_id');            $patient_name   =   $this->db->get_where('patient',                                array('patient_id' => $data['patient_id']))->row()->name;            $doctor_name    =   $this->db->get_where('doctor',                                array('doctor_id' => $doctor_id))->row()->name;            $date           =   date('l, d F Y', $data['timestamp']);            $time           =   date('g:i a', $data['timestamp']);            $message        =   $patient_name . ', your appointment with doctor ' . $doctor_name . ' has been updated to ' . $date . ' at ' . $time . '.';            $receiver_phone =   $this->db->get_where('patient',                                array('patient_id' => $data['patient_id']))->row()->phone;                        $this->sms_model->send_sms($message, $receiver_phone);        }    }    function complete_appointment_info($appointment_id)    {        $data['timestamp']  = strtotime($this->input->post('date_timestamp').' '.$this->input->post('time_timestamp') );        $data['patient_id'] = $this->input->post('patient_id');        $data['completed_status'] = 1;        $this->db->where('appointment_id',$appointment_id);        $this->db->update('appointment',$data);                // Notify patient with sms.        $notify = $this->input->post('notify');        if($notify != '') {            $doctor_id      =   $this->session->userdata('login_user_id');            $patient_name   =   $this->db->get_where('patient',                                array('patient_id' => $data['patient_id']))->row()->name;            $doctor_name    =   $this->db->get_where('doctor',                                array('doctor_id' => $doctor_id))->row()->name;            $date           =   date('l, d F Y', $data['timestamp']);            $time           =   date('g:i a', $data['timestamp']);            $message        =   $patient_name . ', your appointment with doctor ' . $doctor_name . ' has been updated to ' . $date . ' at ' . $time . '.';            $receiver_phone =   $this->db->get_where('patient',                                array('patient_id' => $data['patient_id']))->row()->phone;                        $this->sms_model->send_sms($message, $receiver_phone);        }    }    function approve_appointment_info($appointment_id)    {        $data['timestamp']  = strtotime($this->input->post('date_timestamp').' '.$this->input->post('time_timestamp') );        $data['status']     = 'approved';                if($this->session->userdata('login_type') == 'receptionist')            $data['doctor_id'] = $this->input->post('doctor_id');                $this->db->where('appointment_id',$appointment_id);        $this->db->update('appointment',$data);                // Notify patient with sms.        $notify = $this->input->post('notify');        if($notify != '') {            $doctor_id      =   $this->db->get_where('appointment',                                array('appointment_id' => $appointment_id))->row()->doctor_id;            $patient_id     =   $this->db->get_where('appointment',                                array('appointment_id' => $appointment_id))->row()->patient_id;            $patient_name   =   $this->db->get_where('patient',                                array('patient_id' => $patient_id))->row()->name;            $doctor_name    =   $this->db->get_where('doctor',                                array('doctor_id' => $doctor_id))->row()->name;            $date           =   date('l, d F Y', $data['timestamp']);            $time           =   date('g:i a', $data['timestamp']);            $message        =   $patient_name . ', your requested appointment with doctor ' . $doctor_name . ' on ' . $date . ' at ' . $time . ' has been approved.';            $receiver_phone =   $this->db->get_where('patient',                                array('patient_id' => $patient_id))->row()->phone;                        $this->sms_model->send_sms($message, $receiver_phone);        }    }        function delete_appointment_info($appointment_id)    {        $this->db->where('appointment_id',$appointment_id);        $this->db->delete('appointment');    }        function save_prescription_info()    {        $data['timestamp']      = strtotime($this->input->post('date_timestamp').' '.$this->input->post('time_timestamp') );        $data['patient_id']     = $this->input->post('patient_id');        $data['case_history']   = $this->input->post('case_history');        $data['medication']     = $this->input->post('medication');        $data['note']           = $this->input->post('note');        $data['doctor_id']      = $this->session->userdata('login_user_id');                $this->db->insert('prescription',$data);    }    function save_newprescription_info()     {         $data['timestamp']      = $this->input->post('date_timestamp');                $data['patient_id']     = $this->input->post('patient_id');        $data['doctor_id']      = $this->session->userdata('login_user_id');                $medicine_entries            = array();        $medicine               = $this->input->post('entry_medicine');        $morning                    = $this->input->post('entry_morning');        $afternoon                    = $this->input->post('entry_afternoon');        $evening                  = $this->input->post('entry_evening');				$doses                  = $this->input->post('entry_doses');        $number_of_entries          = sizeof($medicine);                for ($i = 0; $i < $number_of_entries; $i++)        {            if ($medicine[$i] != "")            {                $new_entry          = array('medicine' => $medicine[$i], 'morning' => $morning[$i], 'afternoon' => $afternoon[$i], 'evening' => $evening[$i], 'doses' => $doses[$i]);                array_push($medicine_entries, $new_entry);            }        }        $data['medicine_entries']    = json_encode($medicine_entries);        $this->db->insert('newprescription', $data);    }		/******pres by chemist*******/	 function save_newprescript_info()     {         $data['timestamp']      = $this->input->post('date_timestamp');                $data['patient_id']     = $this->input->post('patient_id');        $data['pharmacist_id']      = $this->session->userdata('login_user_id');                $medicine_entries            = array();        $medicine               = $this->input->post('entry_medicine');        $morning                    = $this->input->post('entry_morning');        $afternoon                    = $this->input->post('entry_afternoon');        $evening                  = $this->input->post('entry_evening');				$doses                  = $this->input->post('entry_doses');        $number_of_entries          = sizeof($medicine);                for ($i = 0; $i < $number_of_entries; $i++)        {            if ($medicine[$i] != "")            {                $new_entry          = array('medicine' => $medicine[$i], 'morning' => $morning[$i], 'afternoon' => $afternoon[$i], 'evening' => $evening[$i], 'doses' => $doses[$i]);                array_push($medicine_entries, $new_entry);            }        }        $data['medicine_entries']    = json_encode($medicine_entries);        $this->db->insert('newprescription', $data);    }    function update_newprescription_info($prescription_id)    {        $data['timestamp']      = $this->input->post('date_timestamp');        $data['patient_id']     = $this->input->post('patient_id');        $data['charges']     = $this->input->post('charges');        $data['doctor_id']      = $this->session->userdata('login_user_id');	$data['blood_pressure']      = $this->input->post('blood_pressure');        $data['weight']      = $this->input->post('weight');        $data['pulse']      = $this->input->post('pulse');        $data['bsl']      = $this->input->post('bsl');				$data['doses']      = $this->input->post('doses');       $medicine_entries            = array();        $medicine               = $this->input->post('entry_medicine');        $morning                    = $this->input->post('entry_morning');        $afternoon                    = $this->input->post('entry_afternoon');        $evening                  = $this->input->post('entry_evening');        $number_of_entries          = sizeof($medicine);                for ($i = 0; $i < $number_of_entries; $i++)        {            if ($medicine[$i] != "")            {                $new_entry          = array('medicine' => $medicine[$i], 'morning' => $morning[$i], 'afternoon' => $afternoon[$i], 'evening' => $evening[$i]);                array_push($medicine_entries, $new_entry);            }        }        $data['medicine_entries']    = json_encode($medicine_entries);        $this->db->where('newpres_id', $prescription_id);        $this->db->update('newprescription', $data);    }        function delete_newprescription_info($prescription_id)    {        $this->db->where('newpres_id',$prescription_id);        $this->db->delete('newprescription');    }    function select_newprescription_info_by_doctor_id()    {        $doctor_id = $this->session->userdata('login_user_id');        return $this->db->get_where('newprescription', array('doctor_id' => $doctor_id))->result_array();    }	function select_newprescription_info_by_pharmacist_id()    {        $pharmacist_id = $this->session->userdata('login_user_id');        return $this->db->get_where('newprescription', array('pharmacist_id' => $pharmacist_id))->result_array();    }     function select_prescription_info_by_doctor($doctor_id)    {       		$this->db->where('doctor_id',$doctor_id);        return $this->db->get('newprescription')->result_array();				//return $this->db->get_where('newprescription', array('doctor_id' => $doctor))->result_array();    }	 function select_prescription_info_by_patient($patient_id)    {       		$this->db->where('patient_id',$patient_id);        return $this->db->get('newprescription')->result_array();				//return $this->db->get_where('newprescription', array('doctor_id' => $doctor))->result_array();    }	function select_prescription_by_patient_doctor($patient_id)    {		 $doctor_id = $this->session->userdata('login_user_id');		        $this->db->where('doctor_id',$doctor_id);	   		$this->db->where('patient_id',$patient_id);        return $this->db->get('newprescription')->result_array();				//return $this->db->get_where('newprescription', array('doctor_id' => $doctor))->result_array();    }	function select_attachment_by_patient($patient_id)    {		$this->db->where('patient_id',$patient_id);        return $this->db->get('test_report')->result_array();				//return $this->db->get_where('newprescription', array('doctor_id' => $doctor))->result_array();    }		function select_attachment_by_patient_doctor($patient_id)    {		 $doctor_id = $this->session->userdata('login_user_id');		        $this->db->where('doctor_id',$doctor_id);	   		$this->db->where('patient_id',$patient_id);        return $this->db->get('test_report')->result_array();				//return $this->db->get_where('newprescription', array('doctor_id' => $doctor))->result_array();    }	function select_prescription_by_patient_pharmacist($patient_id)    {		 $pharmacist_id = $this->session->userdata('login_user_id');		        $this->db->where('pharmacist_id',$pharmacist_id);	   		$this->db->where('patient_id',$patient_id);        return $this->db->get('newprescription')->result_array();				//return $this->db->get_where('newprescription', array('doctor_id' => $doctor))->result_array();    }	 function select_prescription_info()    {       		//$this->db->where('doctor_id',$doctor_id);        return $this->db->get('newprescription')->result_array();				//return $this->db->get_where('newprescription', array('doctor_id' => $doctor))->result_array();    }            function select_prescription_info_by_doctor_id()    {        $doctor_id = $this->session->userdata('login_user_id');        return $this->db->get_where('prescription', array('doctor_id' => $doctor_id))->result_array();    }        function select_medication_history( $patient_id = '' )    {        return $this->db->get_where('prescription', array('patient_id' => $patient_id))->result_array();    }        function select_prescription_info_by_patient_id()    {        $patient_id = $this->session->userdata('login_user_id');        return $this->db->get_where('prescription', array('patient_id' => $patient_id))->result_array();    }        function update_prescription_info($prescription_id)    {        $data['timestamp']      = strtotime($this->input->post('date_timestamp').' '.$this->input->post('time_timestamp') );        $data['patient_id']     = $this->input->post('patient_id');        $data['case_history']   = $this->input->post('case_history');        $data['medication']     = $this->input->post('medication');        $data['note']           = $this->input->post('note');        $data['doctor_id']      = $this->session->userdata('login_user_id');                $this->db->where('prescription_id',$prescription_id);        $this->db->update('prescription',$data);    }        function delete_prescription_info($prescription_id)    {        $this->db->where('prescription_id',$prescription_id);        $this->db->delete('prescription');    }        function save_diagnosis_report_info()    {        $data['timestamp']          = strtotime($this->input->post('date_timestamp').' '.$this->input->post('time_timestamp') );        $data['report_type']        = $this->input->post('report_type');        $data['file_name']          = $_FILES["file_name"]["name"];        $data['document_type']      = $this->input->post('document_type');        $data['description']        = $this->input->post('description');        $data['prescription_id']    = $this->input->post('prescription_id');                $this->db->insert('diagnosis_report',$data);                $diagnosis_report_id        = $this->db->insert_id();        move_uploaded_file($_FILES["file_name"]["tmp_name"], "uploads/diagnosis_report/" . $_FILES["file_name"]["name"]);    }        function select_diagnosis_report_info()    {        return $this->db->get('diagnosis_report')->result_array();    }        function delete_diagnosis_report_info($diagnosis_report_id)    {        $this->db->where('diagnosis_report_id',$diagnosis_report_id);        $this->db->delete('diagnosis_report');    }        function save_notice_info()    {        $data['title']              = $this->input->post('title');        $data['description']        = $this->input->post('description');        if($this->input->post('start_timestamp') != '')            $data['start_timestamp']    = strtotime($this->input->post('start_timestamp'));        else             $data['start_timestamp']    = '';        if($this->input->post('end_timestamp') != '')            $data['end_timestamp']      = strtotime($this->input->post('end_timestamp'));        else            $data['end_timestamp']      = $data['start_timestamp'];                $this->db->insert('notice',$data);    }        function select_notice_info()    {        return $this->db->get('notice')->result_array();    }        function update_notice_info($notice_id)    {        $data['title']              = $this->input->post('title');        $data['description']        = $this->input->post('description');        if($this->input->post('start_timestamp') != '')            $data['start_timestamp']    = strtotime($this->input->post('start_timestamp'));        else             $data['start_timestamp']    = '';        if($this->input->post('end_timestamp') != '')            $data['end_timestamp']      = strtotime($this->input->post('end_timestamp'));        else            $data['end_timestamp']      = $data['start_timestamp'];                $this->db->where('notice_id',$notice_id);        $this->db->update('notice',$data);    }        function delete_notice_info($notice_id)    {        $this->db->where('notice_id',$notice_id);        $this->db->delete('notice');    }        ////////private message//////    function send_new_private_message() {        $message    = $this->input->post('message');        $timestamp  = strtotime(date("Y-m-d H:i:s"));        $reciever   = $this->input->post('reciever');        $sender     = $this->session->userdata('login_type') . '-' . $this->session->userdata('login_user_id');        //check if the thread between those 2 users exists, if not create new thread        $num1 = $this->db->get_where('message_thread', array('sender' => $sender, 'reciever' => $reciever))->num_rows();        $num2 = $this->db->get_where('message_thread', array('sender' => $reciever, 'reciever' => $sender))->num_rows();        if ($num1 == 0 && $num2 == 0) {            $message_thread_code                        = substr(md5(rand(100000000, 20000000000)), 0, 15);            $data_message_thread['message_thread_code'] = $message_thread_code;            $data_message_thread['sender']              = $sender;            $data_message_thread['reciever']            = $reciever;            $this->db->insert('message_thread', $data_message_thread);        }        if ($num1 > 0)            $message_thread_code = $this->db->get_where('message_thread', array('sender' => $sender, 'reciever' => $reciever))->row()->message_thread_code;        if ($num2 > 0)            $message_thread_code = $this->db->get_where('message_thread', array('sender' => $reciever, 'reciever' => $sender))->row()->message_thread_code;        $data_message['message_thread_code']    = $message_thread_code;        $data_message['message']                = $message;        $data_message['sender']                 = $sender;        $data_message['timestamp']              = $timestamp;        $this->db->insert('message', $data_message);        return $message_thread_code;    }    function send_reply_message($message_thread_code) {        $message    = $this->input->post('message');        $timestamp  = strtotime(date("Y-m-d H:i:s"));        $sender     = $this->session->userdata('login_type') . '-' . $this->session->userdata('login_user_id');        $data_message['message_thread_code']    = $message_thread_code;        $data_message['message']                = $message;        $data_message['sender']                 = $sender;        $data_message['timestamp']              = $timestamp;        $this->db->insert('message', $data_message);    }    function mark_thread_messages_read($message_thread_code) {        // mark read only the oponnent messages of this thread, not currently logged in user's sent messages        $current_user = $this->session->userdata('login_type') . '-' . $this->session->userdata('login_user_id');        $this->db->where('sender !=', $current_user);        $this->db->where('message_thread_code', $message_thread_code);        $this->db->update('message', array('read_status' => 1));    }    function count_unread_message_of_thread($message_thread_code) {        $unread_message_counter = 0;        $current_user = $this->session->userdata('login_type') . '-' . $this->session->userdata('login_user_id');        $messages = $this->db->get_where('message', array('message_thread_code' => $message_thread_code))->result_array();        foreach ($messages as $row) {            if ($row['sender'] != $current_user && $row['read_status'] == '0')                $unread_message_counter++;        }        return $unread_message_counter;    }    function GetRow($keyword) {                $this->db->order_by('medicine_id');        $this->db->like("name", $keyword);        return $this->db->get('medicine')->result_array();    }}